https://github.com/gmendonca/simple-p2p-file-sharing

PeerProcees.java

    main()
    read file common.cfg
    read file peerinfo.cfg
    set environment variables
    initialize own Bitfield


    start server thread
        listens for new peers
        once it gets a request it will
            receive handshake message
            start a new client thread connecting to that process
            receive bitfield
            construct new bitfield object for that neighbor
            if (bitfield contains new information)
                send interested
            else
                send not interested

        on unchoke event
            send request message

        on piece recieved event
            send request message
        on choke message
            stop sending request messages
        on have message
            update bitfield
            send interested or not interested


    start client thread
        send handshake message
        send bitfield

        every p seconds
            calculate download rate from each neighbor.
            then selects k best neighbors based on download rate.
            unchoke k neghbors if they are not already unchoked
            choke everyone else

        every m seconds
            randomly unchoke a choked neighbor that is interested


    Class bitfield
        information on what that peer contains

    Class neighbor
        contains the bitfield
        contains whether or not the neighbor is interested
        contains choke status



